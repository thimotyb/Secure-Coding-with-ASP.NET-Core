##############
# PROTECTING DATA - CRYPTO
# ASVS Chapt6 Cryptography, ASVS Chapt 8 Data Protection, ASVS Chapt9 TLS Communication
# Microsoft.AspNetCore.DataProtection API https://learn.microsoft.com/en-us/aspnet/core/security/data-protection/introduction?view=aspnetcore-8.0
##############
# DATA ENCRYPTION
#################

TODO TODO TODO
### TODO FIX IN MAIN THE START FOLDER OF MODULE 7 SO YOU DONT HAVE TO MAKE PPL FIX IT BEFORE STARTING

# Look at 7/end/ - Areas>Admin>Controllers>HomeController.cs InitCookie method
# Go to 7/start replace HomeController.cs to add InitCookie and all DI injections
# Rename all additional Migrations in Migrations/GlobomanticsSuerveyDb
cd Migrations/GlobomanticsSurveyDb/
for file in *.cs; do mv -- "$file" "${file%.cs}.bak"; done
# Copy Index.cshtml.cs from 8/start in Areas>Admin>Identity>Pages>Account>Manage (it's missing!)
# In 7/start check you have GloboIdentity.db (not GLOBOIDENTITY.db), and in appsettings.Development.json line 10 check GloboIdentity.db
# In Program.cs we need to have builder.Services.AddDataProtection(), but actually WebApplication.CreateBuilder() already adds all necessary dep inj
# Login and navigate to /Admin/initcookie to test it  
# In console: Initial data: Admin@globomantics.com
Protect data: CfDJ8KrCsBgxixlNlL7y-I19S4TNZ5Tu2Gzg2hEMehKlt1fcRjnyok3-ftG8NiHW61v-bxBG9e82tkvqCggJ-augImQE772nyflQagVNMrDPz94zAoP5jOjoSMjB1O579s-VjvJxDi5mjSwf4L7gdEk2X_c
#################### Also check cookie "ProtectedData"

####################àà
# SECRET MANAGEMENT
###################
# Examples from https://learn.microsoft.com/en-us/aspnet/core/security/app-secrets?view=aspnetcore-8.0&tabs=windows
###################
dotnet user-secrets init
# Set UserSecretsId to '5a3c717c-a2c2-460c-a136-25d5e09650ed' for MSBuild project '/workspace/Secure-Coding-with-ASP.NET-Core/.NetCore8/Modules/7/start/WebApplication1/Globomantics.Survey.csproj'.
# It is set in .csproj  <UserSecretsId>5a3c717c-a2c2-460c-a136-25d5e09650ed</UserSecretsId>
dotnet user-secrets set "Movies:ServiceApiKey" "12345"
# TODO: TRY ON LOCAL WINDOWS MACHINE AS SET SECRET DOES NOT WORK ON GITPOD

#####################
# CLIENTSIDE DATA PROTECTION ASVS 8.2
######################
# Run 7/start (after you have fixed it), go to /Admin/User, select SuperAdmin, it has "Send Message" button (only for Admins)
# Send a message intercept it in Fiddler, Look in Raw mode, message is in the URL as QueryParam because the Admin>Controllers>UserController for 
# SendEmail uses GET (cant use body as POST), and in Areas>Admin>Views>User>ViewUser.cshtml in the form line 57 uses action GET. even if you use HTTPS the URL can be stored in 
# history, proxies, caches in unencrypted form
# ----> Change to POST both in Controller and View and retry, plus it gets the CSRF Verif Token

###################
# CACHING MANAGEMENT
####################
# In Fiddler (you can also use Inspect>Network in chrome devtools click on request), IN THE RESPONSE check headers of home page, there are NO cache related headers, instead in login page, there is no-cache (it means always revalidate with server), no-store (it means do not store in cache) directive (don't cache pages with tokens, they change)
# No-cache No-store is used automatically because login/logout are FORM based. If they would be just links, they would not get automatically these headers.
# To add cache protection header globally, add in Program.cs (in pipeline before Auth/auth):
using Microsoft.Net.Http.Headers;
using System.Net;
....
app.Use(async (context, next) =>
{
    context.Response.GetTypedHeaders().CacheControl =
        new Microsoft.Net.Http.Headers.CacheControlHeaderValue()
        {
            NoCache = true,
            NoStore = true
        };
    context.Response.Headers[HeaderNames.Pragma] = "no-cache";
    context.Response.Headers[HeaderNames.Expires] = "0";
    await next();
});

#app.UseAuthentication();
#app.UseAuthorization();

# Run again, inspect headers in RESPONSE of Home, now you have nocache-nostore also there (and everywhere)
# To apply locally: See Error Action of Home Controller, line 41:
[ResponseCache(Duration = 0, Location = ResponseCacheLocation.None, NoStore = true)]

###################
# DATA PRIVACY
# ASVS 8.3.2 Users can remove/export Private Data
################
# Data: Public - Private (Personal) - Protected (needs encryption)
# We Classify Personal and Protected data, allow User Management (view/delete) using Identity scaffolding
# In Areas>Identity>Data we extended user with GloboSurveyUser.cs (DateOfBirth DOB is "private" information)
# Run scaffolder
# dotnet tool install -g dotnet-aspnet-codegenerator
# export PATH="$PATH:/home/gitpod/.dotnet/tools"
dotnet aspnet-codegenerator identity -dc Globomantics.Survey.Data.IdentityDbContext --files "Account.Manage.DownloadPersonalData;Account.Manage.DeletePersonalData" --databaseProvider sqlite --force
# Add a Using for the new data type in Areas>Identity>Pages>Account>Manage>_ManageNav.cshtml at the top
@using Globomantics.Survey.Areas.Identity.Data
# Login as admin user, go to user profile, there is new link Personal Data
# Download Data look at fields in json
# In Identity>Pages>Account>Manage>DownloadPersonalData.cshtml.cs it's only collecting PersonalData
 // Only include personal data for download
            var personalData = new Dictionary<string, string>();
            var personalDataProps = typeof(GloboSurveyUser).GetProperties().Where(
                            prop => Attribute.IsDefined(prop, typeof(PersonalDataAttribute)));
# To include new fileds (Dob...) add [PersonalData] before each property in GloboSurveyUser.cs
# Download data again, now it includes 2 new fields
# Create a new user (not admin), then use the Delete functionality to see how it works

###############
# TLS ASVS 9.1
#################





# In Program.cs, comment away Hsts redirect block (lines 89-116)

##########
# HTTPS in gitpod, in .gitpod.yml
##########
# ports:
    - name: Frontend Application
      port: 7236
      protocol: https
#############

dotnet user-secrets init
dotnet user-secrets set "ConnectionStrings:IdentityDbContextConnection" "Data Source=GLOBOIdentity.db"

dotnet add package AWSSDK.SecretsManager
dotnet add package Kralizek.Extensions.Configuration.AWSSecretsManager

dotnet aspnet-codegenerator identity --listFiles --no-build




