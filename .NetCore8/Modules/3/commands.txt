# extension: free-csharp-vscode
# https://www.gitpod.io/docs/introduction/languages/dotnet#pthe-c-extensionp
###############################
# .gitpod.yaml
image: gitpod/workspace-dotnet

tasks:
  - name: Restore & Build
    init: |
      dotnet dev-certs https 
      dotnet restore
      dotnet build
  - name: Run
    command: dotnet run

vscode:
  extensions:
    - muhammad-sammy.csharp
##############################


###################### Ubuntu 20.04
# https://learn.microsoft.com/en-us/dotnet/core/install/linux-ubuntu-install?tabs=dotnet8&pivots=os-linux-ubuntu-2004
##############
# wget https://packages.microsoft.com/config/ubuntu/20.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
# sudo dpkg -i packages-microsoft-prod.deb
# rm packages-microsoft-prod.deb
#############################à

sudo apt-get update
sudo apt install dotnet-sdk-8.0

cd .NetCore8/Modules/3/start/WebApplication1

dotnet add package Microsoft.VisualStudio.Web.CodeGeneration.Design
dotnet tool install -g dotnet-aspnet-codegenerator
export PATH="$PATH:/home/gitpod/.dotnet/tools"
dotnet add package Microsoft.DotNet.Scaffolding.Shared
dotnet add package Microsoft.VisualStudio.Web.CodeGeneration.Design
dotnet add package Microsoft.EntityFrameworkCore.Design
dotnet add package Microsoft.AspNetCore.Identity.EntityFrameworkCore
dotnet add package Microsoft.AspNetCore.Identity.UI
dotnet add package Microsoft.EntityFrameworkCore.Sqlite
dotnet add package Microsoft.EntityFrameworkCore.Tools

# Try first run without login, try go in paths /Survey ; /admin, they are unprotected
dotnet run

#############################
# Add Identity Core login
###########################
dotnet aspnet-codegenerator identity --listFiles --no-build

dotnet aspnet-codegenerator identity -dc Globomantics.Survey.Data.IdentityDbContext --files "Account.Register;Account.Login;Account.Logout" --databaseProvider sqlite

# Add in Program.cs
builder.Services.AddDbContext<IdentityDbContext>(
    dbContextoptions => dbContextoptions.UseSqlite(builder.Configuration["ConnectionStrings:GloboIdentityDbConnectionString"]));
....
app.UseAuthentication();
app.UseAuthorization();
....
app.MapRazorPages();
app.Run();

# Add in AppSettings.Development.json
"ConnectionStrings": {
    "GloboSurveyDbConnectionString": "Data Source=GloboSurvey.db",
    "GloboIdentityDbConnectionString": "Data Source=GloboIdentity.db"
  }

# Add Partial in Views/Shared/_Layout.cshtml, Line 28-30
</ul>
                    <partial name="_LoginPartial"/>
                </div>
################

# Update databases
dotnet tool install --global dotnet-ef --version 8.0.3
dotnet-ef migrations add Identity --context IdentityDbContext
dotnet-ef database update --context IdentityDbContext

# Try now with new login
dotnet run

#################
# Password Strength
################
# In Program.cs line 22
builder.Services.Configure<IdentityOptions>(options =>
{
    options.Password.RequiredLength = 12;
    options.Password.RequireDigit = false;
    options.Password.RequireLowercase = false;
    options.Password.RequireUppercase = false;
    options.Password.RequireNonAlphanumeric = false;
    options.Lockout.MaxFailedAccessAttempts = 5;
    options.Lockout.DefaultLockoutTimeSpan = TimeSpan.FromMinutes(10);
});

# In Areas>Identity>Pages>Account>Register.cshtml.cs Line 86
# Change max 128 and min length 12

# dotnet run and check validation in register new account / password

###########################
# Account Confirmation
###########################

# Program.cs Line 17 add back SignIn Required Confirmed Account
builder.Services.AddDefaultIdentity<IdentityUser>(options => options.SignIn.RequireConfirmedAccount = true)
    .AddEntityFrameworkStores<IdentityDbContext>();
# Run program, register new user, use link to confirm address (devel mode). let's create an email sender that logs in console the confirmation link
# Add Services dir, create EmailSender.cs file (copy it from .NetCore6/3/end)

# Add register page via scaffolding
dotnet aspnet-codegenerator identity -dc Globomantics.Survey.Data.IdentityDbContext --files "Account.RegisterConfirmation" --databaseProvider sqlite

# In Areas>Identity>Pages>Account>RegisterConfirmation.cshtml.cs Line 63 set ConfirmationLink to false
# In Program.cs add sender class (line 31), add using statements 
using Microsoft.AspNetCore.Identity.UI.Services;
using Globomantics.Survey.Services;
builder.Services.AddTransient<IEmailSender, EmailSender>();

# Run, reregister, copy link from console and paste in browser (replace &amp; to & at beginning and end)

##############################à
# Password Reset ASVS 2.1.5
#################################
# Add reset password components via scaffolding
dotnet aspnet-codegenerator identity -dc Globomantics.Survey.Data.IdentityDbContext --files "Account.ResetPassword;Account.ResetPasswordConfirmation" --databaseProvider sqlite
# In Areas>Identity>Pages>Account>ResetPassword.cshtml.cs Line 52
# Change max 128 and min length 12
# Run, login as user, click on user to reset password

###########################
# MFA 2 Fact Auth ASVS 2.2.2 / 2.8.1
###########################

# Use scaffolder
dotnet aspnet-codegenerator identity -dc Globomantics.Survey.Data.IdentityDbContext --files "Account.Manage.Disable2fa;Account.Manage.TwoFactorAuthentication;Account.Manage.EnableAuthenticator" --databaseProvider sqlite

# Add in wwwroot/lib QR code generator from https://davidshimjs.github.io/qrcodejs/ (take from Net6/3)
# Add in wwwroot/js a file qr.js to use library (take from Net6/3)
# Change line 183 of Manage>EnableAuthenticator.cshtlm.cs to "Globomantics Survey"
# In EnableAuthenitcator.cshtml add reference to js scripts at the bottom, remove tooltip code at line 25
    <script type="text/javascript" src="~/lib/qrcode.js"></script>
    <script type="text/javascript" src="~/js/qr.js"></script>

##############################
# Rate Limiting Logins
################################
# In Programcs go to options.Password and add
    options.Lockout.MaxFailedAccessAttempts = 5;
    options.Lockout.DefaultLockoutTimeSpan = TimeSpan.FromMinutes(10);
# In Login.cshtml.cs line 114 se lockoutOnFailure: true
# Try to fail login 5 times



